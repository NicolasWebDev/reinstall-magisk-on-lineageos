#! /bin/bash

set -e

PHONE_ADB_SERIAL_NUMBER=paste_yours_here # The adb serial number can be found by running `adb devices`.

print_message() {
    printf "$1\n"
}

check_phone_is_connected() {
    if ! adb devices | grep --silent "$PHONE_ADB_SERIAL_NUMBER"; then
        print_message "ERROR: phone '$PHONE_ADB_SERIAL_NUMBER' is not connected"
        adb devices -l
        exit 1
    fi
    print_message "Operations will be performed on:"
    adb devices -l | grep $PHONE_ADB_SERIAL_NUMBER
}

check_phone_is_in_fastboot_mode() {
    fastboot devices | grep --silent "$PHONE_ADB_SERIAL_NUMBER"
}

get_lineage_version() {
    adb -s "$PHONE_ADB_SERIAL_NUMBER" shell getprop ro.lineage.version | tr -d '\n'
}

get_device_name() {
    adb -s "$PHONE_ADB_SERIAL_NUMBER" shell getprop ro.lineage.device | tr -d '\n'
}

get_device_downloads_page() {
    echo "https://download.lineageos.org/$(get_device_name)"
}

get_build_url() {
    curl --no-progress-meter "$(get_device_downloads_page)" |
        grep --perl-regexp --only-matching --ignore-case \
            "(?<=href=\")https://mirrorbits.lineageos.org/.*?$(get_lineage_version)-signed.zip(?=\")"
}

download_latest_lineageos_build() {
    # The --location lets curl follow the redirection.
    curl --location "$(get_build_url)" --output /tmp/lineageos.zip
}

extract_boot_image() {
    unzip -od /tmp /tmp/lineageos.zip boot.img
}

transfer_unpatched_boot_image_to_phone() {
    adb -s "$PHONE_ADB_SERIAL_NUMBER" push /tmp/boot.img /sdcard/Download/boot.img
}

patch_boot_image_on_phone() {
    adb -s "$PHONE_ADB_SERIAL_NUMBER" shell /data/adb/magisk/boot_patch.sh /sdcard/Download/boot.img
    adb -s "$PHONE_ADB_SERIAL_NUMBER" shell mv /data/adb/magisk/new-boot.img /sdcard/Download/patched-boot.img
}

transfer_patched_boot_image_to_pc() {
    adb -s "$PHONE_ADB_SERIAL_NUMBER" pull /sdcard/Download/patched-boot.img /tmp
}

reboot_to_bootloader() {
    adb -s "$PHONE_ADB_SERIAL_NUMBER" reboot bootloader
}

wait_for_phone_to_be_in_fastboot() {
    SECONDS=0
    until check_phone_is_in_fastboot_mode; do

        if ((SECONDS > 60)); then
            echo "Giving up..."
            exit 2
        fi

        echo "Phone is not in fastboot mode yet. Waiting..."
        sleep 5
    done
}

flash_patched_boot_image() {
    fastboot -s "$PHONE_ADB_SERIAL_NUMBER" flash boot /tmp/patched-boot.img
}

reboot_phone() {
    fastboot -s "$PHONE_ADB_SERIAL_NUMBER" reboot
}

check_magisk_folder() {
    adb -s "$PHONE_ADB_SERIAL_NUMBER" shell ls /data/adb/magisk/
}

is_rooted_debugging_enabled() {
    adb -s "$PHONE_ADB_SERIAL_NUMBER" root
}

main() {
    print_message "Looking for phone '$PHONE_ADB_SERIAL_NUMBER'"
    check_phone_is_connected
    print_message "Checking on phone if rooted debugging is enabled"
    is_rooted_debugging_enabled
    print_message "Checking on phone if Magisk folder is present listing /data/adb/magisk/"
    check_magisk_folder
    print_message "Downloading build archive from $(get_build_url)"
    download_latest_lineageos_build
    print_message "Extracting 'boot.img' from build archive in /tmp/boot.img"
    extract_boot_image
    print_message "Copying from PC to phone the boot image in /sdcard/Download/boot.img"
    transfer_unpatched_boot_image_to_phone
    print_message "Patching boot image with Magisk script and moving it in /sdcard/Download/patched-boot.img"
    patch_boot_image_on_phone
    print_message "Copying patched boot image from phone to PC in /tmp/patched-boot.img"
    transfer_patched_boot_image_to_pc
    print_message "Rebooting phone in fastboot mode"
    reboot_to_bootloader
    wait_for_phone_to_be_in_fastboot
    print_message "Flashing patched boot image on phone"
    flash_patched_boot_image
    print_message "Rebooting phone"
    reboot_phone
}

# Run the main only when this file is executed as script, to help with testing.
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
